/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package etl;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        String actorPath = "app/actor.csv";
        String filmPath = "app/film.csv";
        String castPath = "app/cast.csv";
        String line = "";
        String actors="";
        String films="";
        String casts="";

        final var cs = StandardCharsets.UTF_8;

        try {
            BufferedReader actorReader = new BufferedReader(new FileReader(actorPath));
            BufferedReader filmReader = new BufferedReader(new FileReader(filmPath));
            BufferedReader castReader = new BufferedReader(new FileReader(castPath));
            PrintWriter resultWriter = new PrintWriter("result.csv");

            while((line= actorReader.readLine()) != null){
                actors += line + "\n";
            }

            while((line= filmReader.readLine()) != null){
                films += line + "\n";
            }

            while((line= castReader.readLine()) != null){
                casts += line + "\n";
            }

            final var bytesFilm = films.getBytes(cs);
            final var inFilm = new ByteArrayInputStream(bytesFilm);
            final var bytesActor = actors.getBytes(cs);
            final var inActor = new ByteArrayInputStream(bytesActor);
            final var bytesCast = casts.getBytes(cs);
            final var inCast = new ByteArrayInputStream(bytesCast);

            final var outCastByFilm = new ByteArrayOutputStream();
            final var outWriter = new OutputStreamWriter(outCastByFilm, cs);

            final var report
                    = etl.data.CastByFilm.Loading.streamWriterCastByFilm(
                    inFilm, inActor, inCast, outWriter
            );

            StringBuilder resultBuilder = new StringBuilder();
            resultBuilder.append(outCastByFilm.toString());
            resultWriter.write(resultBuilder .toString());
            resultWriter.close();

        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            throw new RuntimeException(e);
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}
