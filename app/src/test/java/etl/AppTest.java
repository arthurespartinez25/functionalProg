/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package etl;

import etl.data.ActorTest;
import etl.data.CastTest;
import etl.data.FilmTest;
import etl.data.CastByFilmTest;
import org.junit.jupiter.api.Test;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");

        final String actorList = ActorTest.data;
        final String filmList = FilmTest.data;
        final String castList = CastTest.data;
        final String castByFilmList = CastByFilmTest.data;
        List<String> expected = new ArrayList<>();
        List<String> result = new ArrayList<>();
        String resultPath = "C:\\Users\\arthur.espartinez\\Downloads\\sample6\\result.csv";
        String expectedPath = "C:\\Users\\arthur.espartinez\\Downloads\\sample6\\app\\expected.csv";
        String line = "";

        try (PrintWriter actorWriter = new PrintWriter("actor.csv");
            PrintWriter filmWriter = new PrintWriter("film.csv");
            PrintWriter castWriter = new PrintWriter("cast.csv");
            PrintWriter castByFilmWriter = new PrintWriter("expected.csv")) {

            StringBuilder actorBuilder = new StringBuilder();
            StringBuilder filmBuilder = new StringBuilder();
            StringBuilder castBuilder = new StringBuilder();
            StringBuilder castByFilmBuilder = new StringBuilder();

            actorBuilder.append(actorList);
            filmBuilder.append(filmList);
            castBuilder.append(castList);
            castByFilmBuilder.append(castByFilmList);

            actorWriter.write(actorBuilder .toString());
            filmWriter.write(filmBuilder .toString());
            castWriter.write(castBuilder .toString());
            castByFilmWriter.write(castByFilmBuilder .toString());

            actorWriter.close();
            filmWriter.close();
            castWriter.close();
            castByFilmWriter.close();

            BufferedReader resultReader = new BufferedReader(new FileReader(resultPath));
            BufferedReader expectedReader = new BufferedReader(new FileReader(expectedPath));

            while((line= expectedReader.readLine()) != null){
                expected.add(line);
            }

            while((line= resultReader.readLine()) != null){
                result.add(line);
            }

            resultReader.close();
            expectedReader.close();

           assertEquals(expected, result, "Two files not equal");

        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

    }
}
